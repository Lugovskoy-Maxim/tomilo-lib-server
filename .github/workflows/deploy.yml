name: Deploy to Cloud.ru

on:
  push:
    branches: [main]
  workflow_dispatch:  # –†–∞–∑—Ä–µ—à–∞–µ—Ç —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v4
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # - name: Run tests
      #   run: npm test

      - name: Build project
        run: npm run build

      - name: Deploy to cloud.ru server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: ${{ secrets.VM_SSH_PORT || 22 }}
          script: |
            echo "üöÄ Deploying to cloud.ru server..."
                  
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
            cd /home/${{ secrets.VM_USERNAME }}/tomilo-lib-server/
            
            # –ö–ª–æ–Ω–∏—Ä—É–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —á–µ—Ä–µ–∑ SSH
            if [ ! -d .git ]; then
              echo "Cloning repository for the first time..."
              git clone git@github.com:${{ github.repository }}.git .
            else
              echo "Updating existing repository..."
              git fetch origin
              git reset --hard origin/main
            fi
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
            npm ci --production
            
            # –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
            npm run build
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º .env
            if [ ! -f .env ] && [ -f .env.example ]; then
              cp .env.example .env
              echo "Created .env from example"
            fi
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º docker
            docker-compose down || true

            if [ ! -f docker-compose.yml ] && [ -f docker-compose.yml.example ]; then
              cp docker-compose.yml.example docker-compose.yml
              echo "Created docker-compose.yml from example"
            fi

            docker-compose up -d --build

            # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            pm2 stop tomilo-lib-server || true
            pm2 delete tomilo-lib-server || true
            pm2 start dist/main.js --name "tomilo-lib-server"
            pm2 save
            pm2 startup
            
            # –û—á–∏—Å—Ç–∫–∞ - —É–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π SSH –∫–ª—é—á
            rm -f ~/.ssh/id_rsa
            
            echo "‚úÖ Successfully deployed to cloud.ru!"
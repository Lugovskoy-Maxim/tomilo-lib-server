name: Deploy to Cloud.ru - Server Build

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to cloud.ru server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_SSH_KEY }}
          port: ${{ secrets.VM_SSH_PORT || 22 }}
          script: |
            echo "üöÄ Deploying to cloud.ru server..."

            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            PROJECT_DIR="/home/${{ secrets.VM_USERNAME }}/tomilo-lib-server"
            mkdir -p "$PROJECT_DIR"
            cd "$PROJECT_DIR"
            echo "Current directory: $(pwd)"

            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH –¥–ª—è GitHub (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∫–ª—é—á)
            if [ -n "${{ secrets.GITHUB_SSH_KEY }}" ]; then
              mkdir -p ~/.ssh
              echo "${{ secrets.GITHUB_SSH_KEY }}" > ~/.ssh/github_key
              chmod 600 ~/.ssh/github_key
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              
              # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º git –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è SSH –∫–ª—é—á–∞
              git config --global core.sshCommand "ssh -i ~/.ssh/github_key -o StrictHostKeyChecking=no"
            fi

            # –ö–ª–æ–Ω–∏—Ä—É–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
            if [ ! -d .git ]; then
              echo "Cloning repository for the first time..."
              if [ -n "${{ secrets.GITHUB_SSH_KEY }}" ]; then
                git clone git@github.com:${{ github.repository }}.git .
              else
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º HTTPS –µ—Å–ª–∏ –Ω–µ—Ç SSH –∫–ª—é—á–∞
                git clone https://github.com/${{ github.repository }}.git .
              fi
            else
              echo "Updating existing repository..."
              git fetch origin
              git reset --hard origin/main
            fi

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–∞–ø–∫–µ
            echo "Project contents:"
            ls -la
            echo "Package.json exists: $(test -f package.json && echo 'YES' || echo 'NO')"

            # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏–∑ —à–∞–±–ª–æ–Ω–æ–≤ 
            cp .env.example .env
            cp docker-compose.yml.example docker-compose.yml

            # –í—Å—ë –¥–µ–ª–∞–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            npm install
            npm run build

            # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
            docker-compose down || true
            docker-compose up -d --build

            # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            pm2 stop tomilo-lib-server || true
            pm2 delete tomilo-lib-server || true
            pm2 start dist/main.js --name "tomilo-lib-server"
            pm2 save
            pm2 startup

            # –û—á–∏—Å—Ç–∫–∞
            if [ -f ~/.ssh/github_key ]; then
              rm -f ~/.ssh/github_key
            fi

            echo "‚úÖ Successfully deployed!"
